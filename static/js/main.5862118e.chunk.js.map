{"version":3,"sources":["Context/CartContext.js","Components/Cart/CartItem.js","Context/action-types.js","Components/Cart/CartList.js","Components/Products/Product.js","Components/Products/ProductList.js","Context/reducer.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","createContext","CartItem","cartObj","removeFromCart","className","onClick","src","smallImage","productName","count","productPrice","ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_CART_ITEM_COUNT","CartList","closeCart","showHideClassName","show","useContext","cartItem","dispatch","useState","totalPrice","setTotalPrice","totalCartItems","setTotalCartItems","useEffect","totalAmount","totalCart","map","item","parseFloat","calculateTotal","isAddedtoCart","type","payload","length","items","id","Product","product","addToCart","incrementItem","decrementItem","productItem","setProductItem","disabled","ProductList","setProduct","fetchProducts","a","Axios","get","headers","Authorization","data","photos","allProduct","photo","medium","tinyImage","tiny","random","word","commerce","price","datatype","uuid","console","log","findIndex","x","state","action","filter","index","updatedState","slice","Object","assign","App","useReducer","CartReducer","cartModal","setCartModal","calculateCartItems","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5862118e.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const CartContext = createContext();","import React, {useContext} from 'react'\r\nimport \"./CartItem.css\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\nconst CartItem = ({cartObj, removeFromCart}) => {\r\n\r\n    \r\n    \r\n    return (\r\n        <div className=\"cart-card\">\r\n            <div><button onClick={()=> removeFromCart(cartObj)}><MdClose/></button></div>\r\n            <img src={cartObj.smallImage} className=\"w-36 h-30\" />\r\n            <div>\r\n                <p>{cartObj.productName}</p>\r\n                <p>Quantity: {cartObj.count}</p>\r\n            </div>\r\n            <p>{cartObj.productPrice}</p>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","export const ADD_CART_ITEM = \"ADD_CART_ITEM\";\r\nexport const REMOVE_CART_ITEM = \"REMOVE_CART_ITEM\";\r\nexport const UPDATE_CART_ITEM_COUNT= \"UPDATE_CART_ITEM_COUNT\";","import React, {useContext, useEffect, useState} from 'react'\r\nimport \"./CartList.css\";\r\nimport {CartContext} from \"../../Context/CartContext\";\r\nimport CartItem from './CartItem';\r\nimport { MdClose } from \"react-icons/md\";\r\nimport {  REMOVE_CART_ITEM } from \"../../Context/action-types\";\r\n\r\n\r\nconst CartList = ({closeCart,show}) => {\r\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n    const {cartItem,dispatch} = useContext(CartContext);\r\n    const [totalPrice, setTotalPrice] = useState(0);\r\n    const [totalCartItems, setTotalCartItems] = useState(0);\r\n    const calculateTotal = ()=>{\r\n        let totalAmount = 0;\r\n        let totalCart = 0;\r\n        cartItem.map(item=>{\r\n            totalAmount = totalAmount + (item.count * parseFloat(item.productPrice));\r\n            totalCart = totalCart + item.count;\r\n        })\r\n        setTotalPrice(totalAmount);\r\n        setTotalCartItems(totalCart);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        calculateTotal();\r\n    },[cartItem]);\r\n\r\n    const removeFromCart = item =>{\r\n        item.isAddedtoCart = false;\r\n        item.count = 0;\r\n          dispatch({\r\n            type: REMOVE_CART_ITEM,\r\n            payload: item\r\n          })  \r\n        \r\n    }\r\n\r\n    return (\r\n            <div className={showHideClassName}>\r\n            <div  className=\"absolute right-2/4 top-4\"><button onClick={()=> closeCart()}><MdClose/></button></div>\r\n                <h1 className=\"text-lg font-bold\">Cart {totalCartItems}</h1>\r\n                <div className=\"cart-container\">\r\n                    {cartItem.length > 0 ? <div>{cartItem.map((items)=>(\r\n                    <CartItem cartObj={items} key={items.id} removeFromCart={removeFromCart}/>\r\n                    ))}</div> : <p className=\"p-10 text-red-500 decoration-clone\">Your cart is empty</p>}\r\n                </div>\r\n                <div className=\"checkout-container\">\r\n                        <h2>Total</h2> <p>{totalPrice}</p>\r\n                        <button className=\"checkout-btn btn-green\">Checkout</button>\r\n                </div>\r\n            </div>\r\n            \r\n    )\r\n}\r\n\r\nexport default CartList\r\n","import React,{useEffect, useState} from \"react\";\r\nimport \"./Product.css\";\r\nimport { FaMinusSquare, FaPlusSquare, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst Product = ({ product, addToCart, removeFromCart, incrementItem, decrementItem }) => {\r\n    const [productItem, setProductItem] = useState([]);\r\n    useEffect(()=>{\r\n        setProductItem(product)\r\n    },[product])\r\n\r\n    \r\n  return (\r\n    <div className=\"shadow flex flex-col items-center p-3\">\r\n      <img src={productItem.smallImage} className=\"w-64 h-48\" />\r\n      <p className=\"font-medium capitalize\">{productItem.productName}</p>\r\n      <p>${productItem.productPrice}</p>\r\n      {productItem.isAddedtoCart ? (\r\n        <div className=\"flex grid-cols-2 gap-2 grid w-4/5\">\r\n          <div className=\"flex items-center\">\r\n           <button  onClick={()=> decrementItem(productItem)} disabled={productItem.count <= 1 } className=\"disabled:opacity-50 disabled:cursor-text focus:outline-none\"><FaMinusSquare className=\"w-5 h-5\" /> </button>\r\n            <span className=\"mx-2\">{productItem.count}</span>\r\n            {productItem.count >= 1 ? <button onClick={()=>incrementItem(productItem)} className=\"focus:outline-none\"><FaPlusSquare  className=\"w-5 h-5\"/></button> : null}\r\n          </div>\r\n          <button onClick={() => removeFromCart(productItem)} className=\"btn btn-red\">\r\n            <FaTrashAlt  />\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          onClick={() => addToCart(productItem)}\r\n          className=\"btn btn-green\"\r\n        >\r\n          Add to Cart\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Product from \"./Product\";\r\nimport Axios from \"axios\";\r\nimport { random, commerce, datatype } from \"faker\";\r\nimport { CartContext } from \"../../Context/CartContext\";\r\nimport { ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_CART_ITEM_COUNT } from \"../../Context/action-types\";\r\n\r\nconst ProductList = () => {\r\n  const apiKey = \"563492ad6f917000010000018f3e254bdba740aab8247cce67fb3648\";\r\n\r\n  const url = \"https://api.pexels.com/v1/search?query=toys&per_page=8&page=1\";\r\n\r\n  const [product, setProduct] = useState([]);\r\n\r\n  const {cartItem, dispatch} = useContext(CartContext);\r\n  const fetchProducts = async () => {\r\n    const { data } = await Axios.get(url, {\r\n      headers: {\r\n        Authorization: apiKey,\r\n      },\r\n    });\r\n\r\n    const { photos } = data;\r\n\r\n    const allProduct = photos.map((photo) => ({\r\n      smallImage: photo.src.medium,\r\n      tinyImage: photo.src.tiny,\r\n      productName: random.word(),\r\n      productPrice: commerce.price(),\r\n      count:0,\r\n      id: datatype.uuid(),\r\n    }));\r\n    setProduct(allProduct);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    console.log(\"cart updated\",cartItem,product);\r\n  },[cartItem]);\r\n\r\n  const addToCart = item =>{\r\n    item.isAddedtoCart = true;\r\n    item.count = 1;\r\n    dispatch({\r\n      type: ADD_CART_ITEM,\r\n      payload: item\r\n    })\r\n  }\r\n\r\n  const removeFromCart = item =>{\r\n    item.isAddedtoCart = false;\r\n    item.count = 0;\r\n      dispatch({\r\n        type: REMOVE_CART_ITEM,\r\n        payload: item\r\n      })  \r\n    \r\n  }\r\n  const incrementItem = item =>{\r\n    item.isAddedtoCart = true;\r\n    if(item.count > 0){\r\n      item.count = item.count+ 1;\r\n    }\r\n    var index = product.findIndex(x=> x.id === item.id);\r\n    \r\n      // setProduct([\r\n      //      ...product.slice(0,index),\r\n      //      Object.assign({}, product[index], item),\r\n      //      ...product.slice(index+1)\r\n      //   ]);\r\n        dispatch({\r\n          type: UPDATE_CART_ITEM_COUNT,\r\n          payload: item\r\n        })  \r\n  }\r\n\r\n  const decrementItem = item =>{\r\n    item.isAddedtoCart = true;\r\n    if(item.count > 0){\r\n      item.count = item.count - 1;\r\n    }\r\n    var index = product.findIndex(x=> x.id === item.id);\r\n    \r\n      // setProduct([\r\n      //      ...product.slice(0,index),\r\n      //      Object.assign({}, product[index], item),\r\n      //      ...product.slice(index+1)\r\n      //   ]);\r\n        dispatch({\r\n          type: UPDATE_CART_ITEM_COUNT,\r\n          payload: item\r\n        })  \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"grid lg:grid-cols-4 gap-4 md:grid-cols-3 sm:grid-cols-2 px-4\">\r\n        {product.map((item) => (\r\n            <Product \r\n            key={item.id} \r\n            product={item} \r\n            addToCart={addToCart} \r\n            removeFromCart={removeFromCart}\r\n            incrementItem={incrementItem}\r\n            decrementItem={decrementItem} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import {ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_CART_ITEM_COUNT } from \"./action-types\";\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case ADD_CART_ITEM:\r\n            return [...state, action.payload];\r\n        case REMOVE_CART_ITEM:\r\n            let currrentState=  state.filter(item => item.id !== action.payload.id);\r\n            return currrentState;\r\n        case UPDATE_CART_ITEM_COUNT:\r\n            var index = state.findIndex(x=> x.id === action.payload.id);\r\n            let updatedState=  [...state.slice(0,index),\r\n            Object.assign({}, state[index], action.payload),\r\n            ...state.slice(index+1)]\r\n            console.log(\"updatedState\",updatedState)\r\n            return updatedState;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {useReducer, useState, useEffect} from \"react\";\nimport { FaCartPlus } from \"react-icons/fa\";\n\nimport './App.css';\nimport CartList from \"./Components/Cart/CartList\";\nimport ProductList from './Components/Products/ProductList';\nimport {CartContext} from \"./Context/CartContext\";\nimport CartReducer from \"./Context/reducer\";\n\nfunction App() {\n  const [cartItem, dispatch] = useReducer(CartReducer,[]);\n  const [cartModal, setCartModal] = useState({show:false});\n  const [totalCartItems, setTotalCartItems] = useState(0);\n\n  const openCart = () => {\n      setCartModal({show:true});\n    };\n  \n   const closeCarts = () => {\n      setCartModal({show:false});\n    };\n  \n    const calculateCartItems = ()=>{\n      let totalCart = 0;\n      cartItem.map(item=>{\n          totalCart = totalCart + item.count;\n      })\n      setTotalCartItems(totalCart);\n    }\n\n    useEffect(()=>{\n      calculateCartItems();\n  },[cartItem]);\n\n  return (\n\n    <CartContext.Provider value={{cartItem, dispatch}}>\n      <header className=\"p-2 mb-4 border-b-2\">\n        <h1 className=\"text-lg font-bold\">Toy shop</h1>\n        <button className=\"right-4 top-3 absolute focus:outline-none\" onClick={openCart}>\n          <FaCartPlus className=\"w-5 h-5\" />\n          <span className=\"cart-badge\">{totalCartItems}</span>\n        </button>\n      </header>\n      <ProductList/>\n      <CartList closeCart={closeCarts} show={cartModal.show} />\n    </CartContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}