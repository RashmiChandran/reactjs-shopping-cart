{"version":3,"sources":["Services/Cart/CartContext.js","Components/Cart/CartItem.js","Services/Cart/action-types.js","Components/Cart/CartList.js","Components/Products/Product.js","Services/Product/ProductContext.js","Services/Product/action-types.js","Components/Products/ProductList.js","Services/util.js","Services/Cart/reducer.js","Components/SortBy/SortBy.js","Services/Product/reducer.js","App.js","reportWebVitals.js","index.js"],"names":["CartContext","createContext","CartItem","cartObj","removeFromCart","className","src","smallImage","productName","count","productPrice","onClick","ADD_CART_ITEM","REMOVE_CART_ITEM","UPDATE_CART_ITEM_COUNT","CartList","closeCart","showHideClassName","show","useContext","cartItem","dispatch","useState","totalPrice","setTotalPrice","totalCartItems","setTotalCartItems","useEffect","totalAmount","totalCart","map","item","parseFloat","calculateTotal","isAddedtoCart","type","payload","length","items","id","alert","Product","product","addToCart","incrementItem","decrementItem","productItem","setProductItem","disabled","ProductContext","FETCH_PRODUCTS","ProductList","products","productDispatch","fetchProducts","a","Axios","get","headers","Authorization","data","photos","allProduct","photo","medium","tinyImage","tiny","random","word","commerce","price","datatype","uuid","age","number","console","log","undefined","color","state","action","filter","index","findIndex","x","slice","Object","assign","SortBy","sortValue","setSortValue","compare","lowestprice","b","parseInt","highestprice","value","onChange","ev","event","sort","target","selected","App","useReducer","CartReducer","ProductReducer","cartModal","setCartModal","calculateCartItems","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAEaA,G,YAAcC,2B,sBCiBZC,EAfE,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,eACxB,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKC,IAAKH,EAAQI,WAAYF,UAAU,mBACxC,gCACI,mBAAGA,UAAU,yBAAb,SAAuCF,EAAQK,cAC/C,2CAAcL,EAAQM,YAE1B,oBAAGJ,UAAU,6BAAb,mBAA4CF,EAAQO,gBACpD,qBAAKL,UAAU,yBAAf,SAAwC,wBAAQM,QAAS,kBAAKP,EAAeD,IAAUE,UAAU,qBAAzD,SAA8E,cAAC,IAAD,YCbrHO,EAAgB,gBAChBC,EAAmB,mBACnBC,EAAwB,yBCgFtBC,EA1EE,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,UACZC,EADkC,EAAXC,KACI,sBAAwB,qBACzD,EAA+BC,qBAAWnB,GAAlCoB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAClB,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAYAC,qBAAU,YAXa,WACrB,IAAIC,EAAc,EACdC,EAAY,EAChBT,EAASU,KAAI,SAACC,GACZH,GAA4BG,EAAKtB,MAAQuB,WAAWD,EAAKrB,cACzDmB,GAAwBE,EAAKtB,SAE/Be,EAAcI,GACdF,EAAkBG,GAIlBI,KACC,CAACb,IAEJ,IAAMhB,EAAiB,SAAC2B,GACtBA,EAAKG,eAAgB,EACrBH,EAAKtB,MAAQ,EACbY,EAAS,CACPc,KAAMtB,EACNuB,QAASL,KAOb,OACE,sBAAK1B,UAAWY,EAAhB,UACE,qBAAKZ,UAAU,yBAAf,SACE,wBAAQM,QAAS,kBAAMK,KAAaX,UAAU,qBAA9C,SACE,cAAC,IAAD,CAASA,UAAU,gBAGvB,sBAAKA,UAAU,wCAAf,UACE,cAAC,IAAD,CAAYA,UAAU,YAAa,IACnC,sBAAMA,UAAU,aAAhB,SAA8BoB,IAC9B,oBAAIpB,UAAU,yBAAd,qBAEF,qBAAKA,UAAU,iBAAf,SACGe,EAASiB,OAAS,EACjB,8BACGjB,EAASU,KAAI,SAACQ,GAAD,OACZ,cAAC,EAAD,CACEnC,QAASmC,EAETlC,eAAgBA,GADXkC,EAAMC,SAMjB,mBAAGlC,UAAU,mDAAb,kCAKJ,sBAAKA,UAAU,qBAAf,UACE,sBAAKA,UAAU,kCAAf,UACE,uCAAe,IACf,oBAAGA,UAAU,+CAAb,mBACIkB,QAGN,wBAAQlB,UAAU,yBAAyBM,QAAS,WAtCtD6B,MAAM,4BAAuBjB,IAsC3B,6B,yBCrCOkB,G,MAnCC,SAAC,GAA0E,IAAxEC,EAAuE,EAAvEA,QAASC,EAA8D,EAA9DA,UAAWvC,EAAmD,EAAnDA,eAAgBwC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAClE,EAAsCvB,mBAAS,IAA/C,mBAAOwB,EAAP,KAAoBC,EAApB,KAMF,OALEpB,qBAAU,WACNoB,EAAeL,KACjB,CAACA,IAIH,sBAAKrC,UAAU,wCAAf,UACE,qBAAKC,IAAKwC,EAAYvC,WAAYF,UAAU,cAC5C,mBAAGA,UAAU,yBAAb,SAAuCyC,EAAYtC,cACnD,uCAAKsC,EAAYpC,gBAChBoC,EAAYZ,cACX,sBAAK7B,UAAU,oCAAf,UACE,sBAAKA,UAAU,oBAAf,UACC,yBAASM,QAAS,kBAAKkC,EAAcC,IAAcE,SAAUF,EAAYrC,OAAS,EAAIJ,UAAU,8DAAhG,UAA8J,cAAC,IAAD,CAAeA,UAAU,YAAvL,OACC,sBAAMA,UAAU,OAAhB,SAAwByC,EAAYrC,QACnCqC,EAAYrC,OAAS,EAAI,wBAAQE,QAAS,kBAAIiC,EAAcE,IAAczC,UAAU,qBAA3D,SAAgF,cAAC,IAAD,CAAeA,UAAU,cAAuB,QAE5J,wBAAQM,QAAS,kBAAMP,EAAe0C,IAAczC,UAAU,cAA9D,SACE,cAAC,IAAD,SAIJ,wBACEM,QAAS,kBAAMgC,EAAUG,IACzBzC,UAAU,gBAFZ,8BC1BK4C,EAAiBhD,0B,wBCFjBiD,EAAiB,iB,iBC+GfC,G,QA7FK,WAClB,MAA+BhC,qBAAWnB,GAAlCoB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,SAClB,EAAoCF,qBAAW8B,GAAxCG,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,gBACTC,EAAa,uCAAG,kCAAAC,EAAA,sEACCC,IAAMC,ICtBP,gEDsBuB,CAC3CC,QAAS,CACPC,cCvBc,8DDoBI,gBACdC,EADc,EACdA,KAMAC,EAAWD,EAAXC,OAEFC,EAAaD,EAAO/B,KAAI,SAACiC,GAAD,MAAY,CACxCxD,WAAYwD,EAAMzD,IAAI0D,OACtBC,UAAWF,EAAMzD,IAAI4D,KACrB1D,YAAa2D,SAAOC,OACpB1D,aAAc2D,WAASC,QACvB7D,MAAO,EACP8B,GAAIgC,WAASC,OACbC,IAAKF,WAASG,OAAO,OAEvBrB,EAAgB,CACdlB,KAAMe,EACNd,QAAS0B,IApBW,2CAAH,qDAwBrBnC,qBAAU,WACR2B,MACC,IAEH3B,qBAAU,WACRgD,QAAQC,IAAI,uBACZ,CAACxD,IACH,IAAMuB,EAAY,SAACZ,GACjBA,EAAKG,eAAgB,EACrBH,EAAKtB,MAAQ,EACbY,EAAS,CACPc,KAAMvB,EACNwB,QAASL,KAIP3B,EAAiB,SAAC2B,GACtBA,EAAKG,eAAgB,EACrBH,EAAKtB,MAAQ,EACbY,EAAS,CACPc,KAAMtB,EACNuB,QAASL,KAGPa,EAAgB,SAACb,GACrBA,EAAKG,eAAgB,EACjBH,EAAKtB,MAAQ,IACfsB,EAAKtB,MAAQsB,EAAKtB,MAAQ,GAE5BY,EAAS,CACPc,KAAMrB,EACNsB,QAASL,KAIPc,EAAgB,SAACd,GACrBA,EAAKG,eAAgB,EACjBH,EAAKtB,MAAQ,IACfsB,EAAKtB,MAAQsB,EAAKtB,MAAQ,GAE5BY,EAAS,CACPc,KAAMrB,EACNsB,QAASL,KAGX,OACE,8BACE,qBAAK1B,UAAU,+DAAf,cACsBwE,IAAnBzB,EAASd,MACNc,EAASd,MAAMR,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAEEW,QAASX,EACTY,UAAWA,EACXvC,eAAgBA,EAChBwC,cAAeA,EACfC,cAAeA,GALVd,EAAKQ,OAQb,qBAAMlC,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAYyE,MAAM,oB,QEtGtD,WAACC,EAAOC,GACnB,OAAOA,EAAO7C,MACV,KAAKvB,EACD,MAAM,GAAN,mBAAWmE,GAAX,CAAkBC,EAAO5C,UAC7B,KAAKvB,EAED,OADoBkE,EAAME,QAAO,SAAAlD,GAAI,OAAIA,EAAKQ,KAAOyC,EAAO5C,QAAQG,MAExE,KAAKzB,EACD,IAAIoE,EAAQH,EAAMI,WAAU,SAAAC,GAAC,OAAGA,EAAE7C,KAAOyC,EAAO5C,QAAQG,MACxD,MAAM,GAAN,mBAAWwC,EAAMM,MAAM,EAAEH,IAAzB,CACAI,OAAOC,OAAQR,EAAMG,GAAQF,EAAO5C,UADpC,YAEG2C,EAAMM,MAAMH,EAAM,KACzB,QACI,OAAOH,ICyBJS,EApCA,WACb,MAAkClE,qBAAlC,mBAAOmE,EAAP,KAAkBC,EAAlB,KACA,EAAmCvE,qBAAW8B,GAAvCG,EAAP,EAAOA,SAASC,EAAhB,EAAgBA,gBACVsC,EAAU,CACdC,YAAa,SAACrC,EAAGsC,GACf,OAAIC,SAASvC,EAAE7C,cAAgBoF,SAASD,EAAEnF,eAAuB,EAC7DoF,SAASvC,EAAE7C,cAAgBoF,SAASD,EAAEnF,cAAsB,EACzD,GAETqF,aAAc,SAACxC,EAAGsC,GAChB,OAAIC,SAASvC,EAAE7C,cAAgBoF,SAASD,EAAEnF,eAAuB,EAC7DoF,SAASvC,EAAE7C,cAAgBoF,SAASD,EAAEnF,cAAsB,EACzD,IAYX,OACE,sBAAKL,UAAU,aAAf,UACE,6CACA,yBAAQ2F,MAAOP,EAAWQ,SAAU,SAACC,GAAD,OAXlBC,EAWuCD,EAV3D9C,EAASd,MAAM8D,KAAKT,EAAQQ,EAAME,OAAOL,QACzCN,EAAaS,EAAME,OAAOL,YAC1B3C,EAAgB,CACZlB,KAAMe,EACNd,QAASgB,EAASd,QALH,IAAC6D,GAW4C9F,UAAU,kBAAxE,UACE,wBAAQ2F,MAAM,IAAIhD,UAAQ,EAACsD,UAAQ,EAAnC,oBACA,wBAAQN,MAAM,cAAd,+BACA,wBAAQA,MAAM,eAAd,sC,QChCO,aAAgC,IAA/BjB,EAA8B,uDAAxB,CAACzC,MAAM,MAAO0C,EAAU,uCAC1C,OAAOA,EAAO7C,MACV,KAAKe,EACH,OAAO,2BAAI6B,GAAX,IAAiBzC,MAAO0C,EAAO5C,UAC/B,QACE,OAAO2C,ICsDJwB,MAjDf,WACE,MAA6BC,qBAAWC,EAAY,IAApD,mBAAOrF,EAAP,KAAiBC,EAAjB,KACA,EAAoCmF,qBAAWE,EAAe,IAA9D,mBAAOtD,EAAP,KAAiBC,EAAjB,KAEA,EAAkC/B,mBAAS,CAACJ,MAAK,IAAjD,mBAAOyF,EAAP,KAAkBC,EAAlB,KACA,EAA4CtF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KAsBA,OAJEC,qBAAU,YARiB,WACzB,IAAIE,EAAY,EAChBT,EAASU,KAAI,SAAAC,GACTF,GAAwBE,EAAKtB,SAEjCiB,EAAkBG,GAIlBgF,KACF,CAACzF,IAGH,cAAC6B,EAAe6D,SAAhB,CAAyBd,MAAO,CAAC5C,WAAUC,mBAA3C,SACE,eAACrD,EAAY8G,SAAb,CAAsBd,MAAO,CAAC5E,WAAUC,YAAxC,UACE,yBAAQhB,UAAU,sBAAlB,UACE,oBAAIA,UAAU,gCAAd,sBACA,yBAAQA,UAAU,4CAA4CM,QAzBnD,WACbiG,EAAa,CAAC1F,MAAK,KAwBjB,UACE,cAAC,IAAD,CAAYb,UAAU,YACtB,sBAAMA,UAAU,aAAhB,SAA8BoB,UAGlC,qBAAKpB,UAAU,iBAAf,SACE,cAAC,EAAD,MAEF,cAAC,EAAD,IAGA,cAAC,EAAD,CAAUW,UAhCM,WAChB4F,EAAa,CAAC1F,MAAK,KA+BcA,KAAMyF,EAAUzF,aC3CxC6F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5090fc24.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const CartContext = createContext();","import React from 'react'\r\nimport \"./CartItem.css\";\r\nimport { MdClose } from \"react-icons/md\";\r\n\r\nconst CartItem = ({cartObj, removeFromCart}) => {\r\n    return (\r\n        <div className=\"cart-item\">\r\n            <img src={cartObj.smallImage} className=\"w-36 h-30 ml-0\" />\r\n            <div>\r\n                <p className=\"font-medium capitalize\">{cartObj.productName}</p>\r\n                <p>Quantity: {cartObj.count}</p>\r\n            </div>\r\n            <p className=\"text-green-700 font-medium\">â‚¹{cartObj.productPrice}</p>\r\n            <div className=\"absolute top-2 right-2\"><button onClick={()=> removeFromCart(cartObj)} className=\"focus:outline-none\"><MdClose/></button></div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem\r\n","export const ADD_CART_ITEM = \"ADD_CART_ITEM\";\r\nexport const REMOVE_CART_ITEM = \"REMOVE_CART_ITEM\";\r\nexport const UPDATE_CART_ITEM_COUNT= \"UPDATE_CART_ITEM_COUNT\";","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./CartList.css\";\r\nimport { CartContext } from \"../../Services/Cart/CartContext\";\r\nimport CartItem from \"./CartItem\";\r\nimport { MdClose } from \"react-icons/md\";\r\nimport { REMOVE_CART_ITEM } from \"../../Services/Cart/action-types\";\r\nimport { FaCartPlus } from \"react-icons/fa\";\r\n\r\nconst CartList = ({ closeCart, show }) => {\r\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\r\n  const { cartItem, dispatch } = useContext(CartContext);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  const [totalCartItems, setTotalCartItems] = useState(0);\r\n  const calculateTotal = () => {\r\n    let totalAmount = 0;\r\n    let totalCart = 0;\r\n    cartItem.map((item) => {\r\n      totalAmount = totalAmount + item.count * parseFloat(item.productPrice);\r\n      totalCart = totalCart + item.count;\r\n    });\r\n    setTotalPrice(totalAmount);\r\n    setTotalCartItems(totalCart);\r\n  };\r\n\r\n  useEffect(() => {\r\n    calculateTotal();\r\n  }, [cartItem]);\r\n\r\n  const removeFromCart = (item) => {\r\n    item.isAddedtoCart = false;\r\n    item.count = 0;\r\n    dispatch({\r\n      type: REMOVE_CART_ITEM,\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const checkout = ()=>{\r\n      alert(\"Checkout: Subtotal â‚¹\"+totalPrice)\r\n  }\r\n  return (\r\n    <div className={showHideClassName}>\r\n      <div className=\"absolute right-3 top-6\">\r\n        <button onClick={() => closeCart()} className=\"focus:outline-none\">\r\n          <MdClose className=\"w-5 h-5\" />\r\n        </button>\r\n      </div>\r\n      <div className=\"flex items-center justify-center py-4\">\r\n        <FaCartPlus className=\"w-8 h-8\" />{\" \"}\r\n        <span className=\"cart-count\">{totalCartItems}</span>\r\n        <h1 className=\"text-lg font-bold ml-2\">Cart</h1>\r\n      </div>\r\n      <div className=\"cart-container\">\r\n        {cartItem.length > 0 ? (\r\n          <div>\r\n            {cartItem.map((items) => (\r\n              <CartItem\r\n                cartObj={items}\r\n                key={items.id}\r\n                removeFromCart={removeFromCart}\r\n              />\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"p-10 text-red-500 decoration-clone font-semibold\">\r\n            Your cart is empty\r\n          </p>\r\n        )}\r\n      </div>\r\n      <div className=\"checkout-container\">\r\n        <div className=\"flex place-content-between mb-5\">\r\n          <h1>Total</h1>{\" \"}\r\n          <p className=\"text-green-700 font-medium items-end text-xl\">\r\n            â‚¹{totalPrice}\r\n          </p>\r\n        </div>\r\n        <button className=\"checkout-btn btn-green\" onClick={()=> checkout()}>Checkout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CartList;\r\n","import React,{useEffect, useState} from \"react\";\r\nimport \"./Product.css\";\r\nimport { FaMinusSquare, FaPlusSquare, FaTrashAlt } from \"react-icons/fa\";\r\n\r\nconst Product = ({ product, addToCart, removeFromCart, incrementItem, decrementItem }) => {\r\n    const [productItem, setProductItem] = useState([]);\r\n    useEffect(()=>{\r\n        setProductItem(product)\r\n    },[product])\r\n\r\n    \r\n  return (\r\n    <div className=\"shadow flex flex-col items-center p-3\">\r\n      <img src={productItem.smallImage} className=\"w-64 h-48\" />\r\n      <p className=\"font-medium capitalize\">{productItem.productName}</p>\r\n      <p>â‚¹{productItem.productPrice}</p>\r\n      {productItem.isAddedtoCart ? (\r\n        <div className=\"flex grid-cols-2 gap-2 grid w-4/5\">\r\n          <div className=\"flex items-center\">\r\n           <button  onClick={()=> decrementItem(productItem)} disabled={productItem.count <= 1 } className=\"disabled:opacity-50 disabled:cursor-text focus:outline-none\"><FaMinusSquare className=\"w-5 h-5\" /> </button>\r\n            <span className=\"mx-2\">{productItem.count}</span>\r\n            {productItem.count >= 1 ? <button onClick={()=>incrementItem(productItem)} className=\"focus:outline-none\"><FaPlusSquare  className=\"w-5 h-5\"/></button> : null}\r\n          </div>\r\n          <button onClick={() => removeFromCart(productItem)} className=\"btn btn-red\">\r\n            <FaTrashAlt  />\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <button\r\n          onClick={() => addToCart(productItem)}\r\n          className=\"btn btn-green\"\r\n        >\r\n          Add to Cart\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { createContext } from \"react\";\r\n\r\nexport const ProductContext = createContext();","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Product from \"./Product\";\r\n\r\nimport { CartContext } from \"../../Services/Cart/CartContext\";\r\nimport {\r\n  ADD_CART_ITEM,\r\n  REMOVE_CART_ITEM,\r\n  UPDATE_CART_ITEM_COUNT,\r\n} from \"../../Services/Cart/action-types\";\r\nimport { ProductContext } from \"../../Services/Product/ProductContext\";\r\n\r\nimport { apiKey, productURL } from \"../../Services/util\";\r\nimport { random, commerce, datatype } from \"faker\";\r\nimport Axios from \"axios\";\r\n\r\nimport { FETCH_PRODUCTS } from \"../../Services/Product/action-types\";\r\nimport SyncLoader from \"react-spinners/SyncLoader\";\r\nimport \"./ProductList.css\"\r\nconst ProductList = () => {\r\n  const { cartItem, dispatch } = useContext(CartContext);\r\n  const {products, productDispatch} = useContext(ProductContext);\r\n    const fetchProducts = async () => {\r\n    const { data } = await Axios.get(productURL, {\r\n      headers: {\r\n        Authorization: apiKey,\r\n      },\r\n    });\r\n\r\n    const { photos } = data;\r\n\r\n    const allProduct = photos.map((photo) => ({\r\n      smallImage: photo.src.medium,\r\n      tinyImage: photo.src.tiny,\r\n      productName: random.word(),\r\n      productPrice: commerce.price(),\r\n      count: 0,\r\n      id: datatype.uuid(),\r\n      age: datatype.number(6)\r\n    }));\r\n    productDispatch({\r\n      type: FETCH_PRODUCTS,\r\n      payload: allProduct,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(()=>{\r\n    console.log(\"Cart item updated\")\r\n  },[cartItem])\r\n  const addToCart = (item) => {\r\n    item.isAddedtoCart = true;\r\n    item.count = 1;\r\n    dispatch({\r\n      type: ADD_CART_ITEM,\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const removeFromCart = (item) => {\r\n    item.isAddedtoCart = false;\r\n    item.count = 0;\r\n    dispatch({\r\n      type: REMOVE_CART_ITEM,\r\n      payload: item,\r\n    });\r\n  };\r\n  const incrementItem = (item) => {\r\n    item.isAddedtoCart = true;\r\n    if (item.count > 0) {\r\n      item.count = item.count + 1;\r\n    }\r\n    dispatch({\r\n      type: UPDATE_CART_ITEM_COUNT,\r\n      payload: item,\r\n    });\r\n  };\r\n\r\n  const decrementItem = (item) => {\r\n    item.isAddedtoCart = true;\r\n    if (item.count > 0) {\r\n      item.count = item.count - 1;\r\n    }\r\n    dispatch({\r\n      type: UPDATE_CART_ITEM_COUNT,\r\n      payload: item,\r\n    });\r\n  };\r\n    return (\r\n      <div>\r\n        <div className=\"grid lg:grid-cols-4 gap-4 md:grid-cols-3 sm:grid-cols-2 px-4\">\r\n          {products.items !== undefined\r\n            ? products.items.map((item) => (\r\n                <Product\r\n                  key={item.id}\r\n                  product={item}\r\n                  addToCart={addToCart}\r\n                  removeFromCart={removeFromCart}\r\n                  incrementItem={incrementItem}\r\n                  decrementItem={decrementItem}\r\n                />\r\n              ))\r\n            :  <div  className=\"spinner-container\"><SyncLoader color=\"#10b981\"/></div>}\r\n           \r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default ProductList;\r\n","export const productURL = \"https://api.pexels.com/v1/search?query=toys&per_page=8&page=1\";\r\nexport const apiKey = \"563492ad6f917000010000018f3e254bdba740aab8247cce67fb3648\";","import {ADD_CART_ITEM, REMOVE_CART_ITEM, UPDATE_CART_ITEM_COUNT } from \"./action-types\";\r\n\r\nexport default (state, action) =>{\r\n    switch(action.type){\r\n        case ADD_CART_ITEM:\r\n            return [...state, action.payload];\r\n        case REMOVE_CART_ITEM:\r\n            let currrentState=  state.filter(item => item.id !== action.payload.id);\r\n            return currrentState;\r\n        case UPDATE_CART_ITEM_COUNT:\r\n            var index = state.findIndex(x=> x.id === action.payload.id);\r\n            return [...state.slice(0,index),\r\n            Object.assign( state[index], action.payload),\r\n            ...state.slice(index+1)]\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { useState, useContext } from \"react\";\r\nimport { ProductContext } from \"../../Services/Product/ProductContext\";\r\nimport {FETCH_PRODUCTS} from \"../../Services/Product/action-types\";\r\n\r\nconst SortBy = () => {\r\n  const [sortValue, setSortValue] = useState();\r\n  const {products,productDispatch} = useContext(ProductContext);\r\n  const compare = {\r\n    lowestprice: (a, b) => {\r\n      if (parseInt(a.productPrice) < parseInt(b.productPrice)) return -1;\r\n      if (parseInt(a.productPrice) > parseInt(b.productPrice)) return 1;\r\n      return 0;\r\n    },\r\n    highestprice: (a, b) => {\r\n      if (parseInt(a.productPrice) > parseInt(b.productPrice)) return -1;\r\n      if (parseInt(a.productPrice) < parseInt(b.productPrice)) return 1;\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    products.items.sort(compare[event.target.value]);\r\n    setSortValue(event.target.value);\r\n    productDispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: products.items\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"mr-10 mb-5\">\r\n      <label>Sort by:</label>\r\n      <select value={sortValue} onChange={(ev) => handleChange(ev)} className=\"border ml-2 p-2\">\r\n        <option value='1' disabled selected>Select</option>\r\n        <option value=\"lowestprice\">Lowest to Highest</option>\r\n        <option value=\"highestprice\">Highest to Lowest</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SortBy;\r\n","import {FETCH_PRODUCTS } from \"./action-types\";\r\n\r\nexport default (state={items:null}, action) =>{\r\n    switch(action.type){\r\n        case FETCH_PRODUCTS:\r\n          return {...state,items: action.payload}\r\n          default:\r\n            return state;\r\n    }\r\n}","import {useReducer, useState, useEffect} from \"react\";\r\nimport { FaCartPlus } from \"react-icons/fa\";\r\n\r\nimport './App.css';\r\nimport CartList from \"./Components/Cart/CartList\";\r\nimport ProductList from './Components/Products/ProductList';\r\nimport {CartContext} from \"./Services/Cart/CartContext\";\r\nimport CartReducer from \"./Services/Cart/reducer\";\r\nimport SortBy from \"./Components/SortBy/SortBy\";\r\nimport ProductReducer from \"./Services/Product/reducer\";\r\nimport {ProductContext} from \"./Services/Product/ProductContext\";\r\n\r\nfunction App() {\r\n  const [cartItem, dispatch] = useReducer(CartReducer,[]);\r\n  const [products, productDispatch] = useReducer(ProductReducer,[]);\r\n\r\n  const [cartModal, setCartModal] = useState({show:false});\r\n  const [totalCartItems, setTotalCartItems] = useState(0);\r\n\r\n  const openCart = () => {\r\n      setCartModal({show:true});\r\n    };\r\n  \r\n   const closeCarts = () => {\r\n      setCartModal({show:false});\r\n    };\r\n  \r\n    const calculateCartItems = ()=>{\r\n      let totalCart = 0;\r\n      cartItem.map(item=>{\r\n          totalCart = totalCart + item.count;\r\n      })\r\n      setTotalCartItems(totalCart);\r\n    }\r\n\r\n    useEffect(()=>{\r\n      calculateCartItems();\r\n  },[cartItem]);\r\n\r\n  return (\r\n  <ProductContext.Provider value={{products, productDispatch}}>\r\n    <CartContext.Provider value={{cartItem, dispatch}}>\r\n      <header className=\"p-2 mb-4 border-b-2\">\r\n        <h1 className=\"text-2xl font-bold font-serif\">Toy shop</h1>\r\n        <button className=\"right-4 top-3 absolute focus:outline-none\" onClick={openCart}>\r\n          <FaCartPlus className=\"w-5 h-5\" />\r\n          <span className=\"cart-badge\">{totalCartItems}</span>\r\n        </button>\r\n      </header>\r\n      <div className=\"product-filter\">\r\n        <SortBy/>\r\n      </div>\r\n      <ProductList>\r\n\r\n      </ProductList>\r\n      <CartList closeCart={closeCarts} show={cartModal.show} />\r\n    </CartContext.Provider>\r\n  </ProductContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}